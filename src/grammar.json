{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "rifleconf",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "rule"
          },
          {
            "type": "SYMBOL",
            "name": "_end_of_line"
          }
        ]
      }
    },
    "comment": {
      "type": "PATTERN",
      "value": "#[^\\n]*"
    },
    "_spaces": {
      "type": "PATTERN",
      "value": "[ \\t]+"
    },
    "_linebreak": {
      "type": "PATTERN",
      "value": "\\r?\\n"
    },
    "_end_of_line": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_spaces"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "comment"
            },
            {
              "type": "SYMBOL",
              "name": "_linebreak"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_spaces"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "_linebreak"
            }
          ]
        }
      ]
    },
    "unary_condition_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "X"
        },
        {
          "type": "STRING",
          "value": "file"
        },
        {
          "type": "STRING",
          "value": "directory"
        },
        {
          "type": "STRING",
          "value": "terminal"
        },
        {
          "type": "STRING",
          "value": "else"
        }
      ]
    },
    "binary_condition_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "match"
        },
        {
          "type": "STRING",
          "value": "ext"
        },
        {
          "type": "STRING",
          "value": "mime"
        },
        {
          "type": "STRING",
          "value": "name"
        },
        {
          "type": "STRING",
          "value": "path"
        },
        {
          "type": "STRING",
          "value": "has"
        },
        {
          "type": "STRING",
          "value": "env"
        },
        {
          "type": "STRING",
          "value": "number"
        },
        {
          "type": "STRING",
          "value": "flag"
        },
        {
          "type": "STRING",
          "value": "label"
        }
      ]
    },
    "identifier": {
      "type": "PREC",
      "value": -1,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "["
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "STRING",
                            "value": "\\"
                          },
                          {
                            "type": "PATTERN",
                            "value": "."
                          }
                        ]
                      },
                      {
                        "type": "PATTERN",
                        "value": "[^\\]\\n\\\\]"
                      }
                    ]
                  }
                },
                {
                  "type": "STRING",
                  "value": "]"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "\\"
                },
                {
                  "type": "PATTERN",
                  "value": "."
                }
              ]
            },
            {
              "type": "PATTERN",
              "value": "[^,=\\s\\\\\\[\\n]"
            }
          ]
        }
      }
    },
    "binary_condition_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "binary_condition_identifier"
        },
        {
          "type": "SYMBOL",
          "name": "_spaces"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "condition_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "ALIAS",
              "content": {
                "type": "STRING",
                "value": "!"
              },
              "named": true,
              "value": "condition_negation"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "binary_condition_expression"
            },
            {
              "type": "SYMBOL",
              "name": "unary_condition_identifier"
            }
          ]
        }
      ]
    },
    "conditions": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "_spaces"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "condition_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "REPEAT1",
                "content": {
                  "type": "STRING",
                  "value": ","
                }
              },
              {
                "type": "SYMBOL",
                "name": "condition_expression"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "STRING",
                "value": ","
              }
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "word": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "PATTERN",
            "value": "\"[^\"\\n]*\""
          },
          "named": true,
          "value": "string"
        }
      ]
    },
    "command": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "word"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "word"
                },
                {
                  "type": "SYMBOL",
                  "name": "_spaces"
                },
                {
                  "type": "STRING",
                  "value": ";"
                }
              ]
            }
          }
        ]
      }
    },
    "command_list": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 2,
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "STRING",
              "value": "ask"
            },
            "named": true,
            "value": "ask"
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 1,
          "content": {
            "type": "REPEAT1",
            "content": {
              "type": "SYMBOL",
              "name": "command"
            }
          }
        }
      ]
    },
    "rule": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "conditions"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "command_list"
        },
        {
          "type": "SYMBOL",
          "name": "_end_of_line"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_spaces"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}